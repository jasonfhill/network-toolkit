name: Build and Publish

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: network-toolkit
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_ORGNAME: jfhill

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare Docker Image Tags
        id: prep
        run: |
          SHORT_REF=$(basename ${GITHUB_REF})
          SHORT_HASH=${GITHUB_SHA::7}
          TAGS=""
          if [[ ! -z "${SHORT_REF}" && "${SHORT_REF}" == "master" ]]; then
            echo "Found git commit on master branch. Setting docker image tag as: 'latest'"
            TAG=${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:latest
          fi
          if [[ ! -z "${SHORT_REF}" && "${SHORT_REF}" != "master" ]]; then
            echo "Setting docker image tag as: '${SHORT_REF}'"
            TAG=${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_REF}
          fi
          TAGS="${TAG},${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_HASH}"
          echo "Complete Docker image-name and tags are setup as: ${TAGS}"
          echo ::set-output name=tags::${TAGS}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ steps.prep.outputs.tags }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}